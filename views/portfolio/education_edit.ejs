<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Datepicker CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-datepicker@1.9.0/dist/css/bootstrap-datepicker.min.css" rel="stylesheet">
    <title>Education Details</title>

    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f5f5f5;
            line-height: 1.6;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .education-list {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }
        
        .education-card {
            background: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .education-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid #eee;
            padding-bottom: 10px;
            margin-bottom: 15px;
        }
        
        .education-header h3 {
            margin: 0;
            color: #333;
        }
        
        .education-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 10px;
        }
        
        .detail-item {
            background-color: #f9f9f9;
            padding: 10px;
            border-radius: 4px;
        }
        
        .detail-item strong {
            color: #555;
            display: block;
            margin-bottom: 5px;
        }
        
        .action-buttons {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }
        
        .btn {
            padding: 8px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            text-decoration: none;
            font-size: 14px;
        }
        
        .btn-edit {
            background-color: #007bff;
            color: white;
        }
        
        .btn-delete {
            background-color: #dc3545;
            color: white;
        }
        
        .no-records {
            text-align: center;
            color: #666;
            padding: 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        /*  adding education*/
        .education-entry {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 4px;
            background-color: #fff;
        }

        .btn-add, .btn-save, .btn-remove, .btn-next {
            font-weight: bold;
        }

        .saved-entries {
            margin-top: 20px;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 4px;
        }

        .saved-entry {
            padding: 10px;
            margin-bottom: 10px;
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="education-list">
            <% if (edu.length === 0) { %>
                <div class="no-records">No education records found</div>
            <% } else { %>
                <% edu.forEach((eduRecord, index) => { %>
                    <div class="education-card">
                        <div class="education-header">
                            <h3>Education Record <%= index + 1 %></h3>
                        </div>
                        <div class="education-details">
                            <div class="detail-item">
                                <strong>Degree</strong>
                                <%= eduRecord.degree %>
                            </div>
                            <div class="detail-item">
                                <strong>Institution</strong>
                                <%= eduRecord.institution %>
                            </div>
                            <div class="detail-item">
                                <strong>Start Date</strong>
                                <%= eduRecord.start %>
                            </div>
                            <div class="detail-item">
                                <strong>End Date</strong>
                                <%= eduRecord.end %>
                            </div>
                        </div>
                        <div class="action-buttons">
                            <a href="/edit_education/<%= eduRecord.educationid %>" class="btn btn-edit">Edit</a>
                            <a href="/delete_education/<%= eduRecord.educationid %>" class="btn btn-delete">Delete</a>
                        </div>
                    </div>
                <% }) %>
            <% } %>
        </div>
    </div>

    <div class="container">
        <h2 class="text-center">Education History</h2>
        <div id="educationForms"></div>
        <div class="d-flex justify-content-between">
            <button class="btn btn-success btn-add" onclick="addEducationForm()">+ Add Education</button>
            <button class="btn btn-purple btn-next" onclick="proceedToNext()" id="nextButton" disabled>Next</button>
        </div>
        <div class="saved-entries" id="savedEntries">
            <h3>Saved Entries</h3>
        </div>
    </div>

    <!-- jQuery, Popper.js, Bootstrap JS, and Bootstrap Datepicker JS -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-datepicker@1.9.0/dist/js/bootstrap-datepicker.min.js"></script>

    <script>
    let educationEntries = [];
    let formCount = 0;

    function addEducationForm() {
        formCount++;
        const formId = `education-${formCount}`;

        const formHtml = `
            <div class="education-entry" id="${formId}">
                <h5>Education Entry ${formCount}</h5>
                <div class="form-group">
                    <label for="institution-${formId}">School/Institution</label>
                    <input type="text" class="form-control" id="institution-${formId}" required>
                </div>
                <div class="form-group">
                    <label for="degree-${formId}">Degree/Certificate</label>
                    <input type="text" class="form-control" id="degree-${formId}"  placeholder="BACHELOR OF SCIENC IN XYZ"required>
                </div>
              
                <div class="form-group">
                    <label for="start-${formId}">Start Date (MM/DD/YYYY)</label>
                    <input type="text" class="form-control datepicker" id="start-${formId}" placeholder="MM/DD/YYYY" required readonly>
                </div>
                <div class="form-group">
                    <label for="end-${formId}">End Date (MM/DD/YYYY)</label>
                    <input type="text" class="form-control datepicker" id="end-${formId}" placeholder="MM/DD/YYYY" readonly>
                </div>
                <div class="form-group">
                    <input type="checkbox" id="present-${formId}" onclick="toggleEndDate('${formId}')">
                    <label for="present-${formId}">Present Education</label>
                </div>
                <button class="btn btn-primary btn-save" id="save-btn-${formId}">Save Entry</button>
                <button class="btn btn-danger btn-remove" onclick="removeEntry('${formId}')">Remove Entry</button>
            </div>
        `;

        document.getElementById('educationForms').insertAdjacentHTML('beforeend', formHtml);

        // Initialize datepicker on newly added text inputs
        $('#start-' + formId).datepicker({
            format: 'mm/dd/yyyy',
            autoclose: true
        });

        $('#end-' + formId).datepicker({
            format: 'mm/dd/yyyy',
            autoclose: true
        });

        // Attach the event listener for the save button
        document.getElementById(`save-btn-${formId}`).addEventListener('click', () => saveEntry(formId));
    }

    function toggleEndDate(formId) {
        const isChecked = document.getElementById(`present-${formId}`).checked;
        const endDateInput = document.getElementById(`end-${formId}`);
        
        if (isChecked) {
            endDateInput.disabled = true;
            endDateInput.style.display = 'none'; // Hide the End Date field
            endDateInput.value = 'PRESENT'
        } else {
            endDateInput.disabled = false;
            endDateInput.style.display = 'block'; // Show the End Date field
        }
    }

    function saveEntry(formId) {
        const formData = {
            institution: document.getElementById(`institution-${formId}`).value,
            degree: document.getElementById(`degree-${formId}`).value,
            // field: document.getElementById(`field-${formId}`).value,
            startDate: document.getElementById(`start-${formId}`).value,
            current: document.getElementById(`present-${formId}`).checked ? 'true' : 'false',
            endDate: document.getElementById(`present-${formId}`).checked ? 'Present' : document.getElementById(`end-${formId}`).value
        };

        // Validate form data
        if (!validateForm(formData)) {
            alert('Please fill in all required fields');
            return;
        }

        // Send form data to the backend using fetch
        fetch('/auth/education_details', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // alert('Education entry saved successfully');
                displaySavedEntry(data.data); // Pass saved data from backend
                document.getElementById(formId).remove();
                // Enable the Next button after a successful save
                document.getElementById('nextButton').disabled = false;
            } else {
                alert('Error saving education entry');
            }
        })
        .catch(error => console.error('Error:', error));
    }

    function validateForm(formData) {
        if (!formData.institution || !formData.degree  || !formData.startDate) {
            return false; // If any of these fields are missing, return false
        }

        if (formData.current === 'false' && !formData.endDate) {
            return false; // End date is required if the education is not ongoing
        }

        return true; // All validations passed
    }

    function displaySavedEntry(entry) {
        const entryHtml = `
            <div class="saved-entry">
                <strong>${entry.institution}</strong><br>
                ${entry.degree} <br>
                ${entry.startDate} - ${entry.endDate || 'Present'}
            </div>
        `;
        document.getElementById('savedEntries').insertAdjacentHTML('beforeend', entryHtml);
    }

    function removeEntry(formId) {
        document.getElementById(formId).remove();
    }

    function proceedToNext() {
        window.location.href = '/myfortfolio'; 
    }
</script>

</body>
</html>
